[{"C:\\Users\\Najel\\Desktop\\GymCalculator\\src\\index.js":"1","C:\\Users\\Najel\\Desktop\\GymCalculator\\src\\App.js":"2"},{"size":265,"mtime":1690255153461,"results":"3","hashOfConfig":"4"},{"size":1835,"mtime":1690433620301,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1saaoyz",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"C:\\Users\\Najel\\Desktop\\GymCalculator\\src\\index.js",[],[],"C:\\Users\\Najel\\Desktop\\GymCalculator\\src\\App.js",["13"],[],"import './App.css';\r\nimport React, {useState, button} from 'react';\r\n\r\nfunction App() {\r\n  const [weightInputText, setWeightText] = useState('');\r\n  const [repsInputText, setRepsText] = useState('');\r\n  const [oneRepMax, setOneRepMax] = useState('');\r\n\r\n  const handleWeightChange = weight => {\r\n    const numericValue = weight.target.value.replace(/\\D/g, '');\r\n    setWeightText(numericValue);\r\n  }\r\n\r\n  const handleRepsChange = reps => {\r\n    const numericValue = reps.target.value.replace(/\\D/g, '');\r\n    setRepsText(numericValue);\r\n  }\r\n\r\n  const handleCalculateClick = () => {\r\n    const weight = parseFloat(weightInputText);\r\n    const reps = parseFloat(repsInputText);\r\n\r\n    if (!isNaN(weight) && !isNaN(reps) && reps !== 0) {\r\n      const calculatedOneRepMax = weight / ((1.0278) - (0.0278 * reps));\r\n      setOneRepMax(calculatedOneRepMax.toFixed(2));\r\n    } else {\r\n      setOneRepMax();\r\n    }\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setWeightText('');\r\n    setRepsText('');\r\n    setOneRepMax('');\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>1 Rep Max Calculator</h1>\r\n      <label>\r\n        Weight:\r\n        <input\r\n          type=\"text\"\r\n          value={weightInputText}\r\n          onChange={handleWeightChange}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Reps:\r\n        <input\r\n          type=\"text\"\r\n          value={repsInputText}\r\n          onChange={handleRepsChange}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        1 Rep Max:\r\n        <input\r\n          type=\"text\"\r\n          value={oneRepMax}\r\n          readOnly\r\n        />\r\n      </label>\r\n      <div className=\"button-container\">\r\n        <button onClick={handleCalculateClick}>Calculate</button>\r\n        <button onClick={handleClearClick}>Clear</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"14","severity":1,"message":"15","line":2,"column":26,"nodeType":"16","messageId":"17","endLine":2,"endColumn":32},"no-unused-vars","'button' is defined but never used.","Identifier","unusedVar"]